// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.6.1
// source: switch.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SwitchAsset struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Id               string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	VendorCode       string                 `protobuf:"bytes,2,opt,name=vendor_code,json=vendorCode,proto3" json:"vendor_code,omitempty"`
	Name             string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Domain           string                 `protobuf:"bytes,4,opt,name=domain,proto3" json:"domain,omitempty"`
	Hostname         string                 `protobuf:"bytes,5,opt,name=hostname,proto3" json:"hostname,omitempty"`
	OsName           string                 `protobuf:"bytes,6,opt,name=os_name,json=osName,proto3" json:"os_name,omitempty"`
	OsVersion        string                 `protobuf:"bytes,7,opt,name=os_version,json=osVersion,proto3" json:"os_version,omitempty"`
	Description      string                 `protobuf:"bytes,8,opt,name=description,proto3" json:"description,omitempty"`
	AssetType        string                 `protobuf:"bytes,9,opt,name=asset_type,json=assetType,proto3" json:"asset_type,omitempty"`
	DiscoveredBy     string                 `protobuf:"bytes,10,opt,name=discovered_by,json=discoveredBy,proto3" json:"discovered_by,omitempty"`
	Risk             int32                  `protobuf:"varint,11,opt,name=risk,proto3" json:"risk,omitempty"`
	LoggingCompleted bool                   `protobuf:"varint,12,opt,name=logging_completed,json=loggingCompleted,proto3" json:"logging_completed,omitempty"`
	AssetValue       float64                `protobuf:"fixed64,13,opt,name=asset_value,json=assetValue,proto3" json:"asset_value,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *SwitchAsset) Reset() {
	*x = SwitchAsset{}
	mi := &file_switch_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SwitchAsset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwitchAsset) ProtoMessage() {}

func (x *SwitchAsset) ProtoReflect() protoreflect.Message {
	mi := &file_switch_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwitchAsset.ProtoReflect.Descriptor instead.
func (*SwitchAsset) Descriptor() ([]byte, []int) {
	return file_switch_proto_rawDescGZIP(), []int{0}
}

func (x *SwitchAsset) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SwitchAsset) GetVendorCode() string {
	if x != nil {
		return x.VendorCode
	}
	return ""
}

func (x *SwitchAsset) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SwitchAsset) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *SwitchAsset) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *SwitchAsset) GetOsName() string {
	if x != nil {
		return x.OsName
	}
	return ""
}

func (x *SwitchAsset) GetOsVersion() string {
	if x != nil {
		return x.OsVersion
	}
	return ""
}

func (x *SwitchAsset) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SwitchAsset) GetAssetType() string {
	if x != nil {
		return x.AssetType
	}
	return ""
}

func (x *SwitchAsset) GetDiscoveredBy() string {
	if x != nil {
		return x.DiscoveredBy
	}
	return ""
}

func (x *SwitchAsset) GetRisk() int32 {
	if x != nil {
		return x.Risk
	}
	return 0
}

func (x *SwitchAsset) GetLoggingCompleted() bool {
	if x != nil {
		return x.LoggingCompleted
	}
	return false
}

func (x *SwitchAsset) GetAssetValue() float64 {
	if x != nil {
		return x.AssetValue
	}
	return 0
}

type SwitchDetails struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Id              string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AssetId         string                 `protobuf:"bytes,2,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
	Model           string                 `protobuf:"bytes,3,opt,name=model,proto3" json:"model,omitempty"`
	SoftwareVersion string                 `protobuf:"bytes,4,opt,name=software_version,json=softwareVersion,proto3" json:"software_version,omitempty"`
	SerialNumber    string                 `protobuf:"bytes,5,opt,name=serial_number,json=serialNumber,proto3" json:"serial_number,omitempty"`
	SystemUptime    string                 `protobuf:"bytes,6,opt,name=system_uptime,json=systemUptime,proto3" json:"system_uptime,omitempty"`
	ManagementIp    string                 `protobuf:"bytes,7,opt,name=management_ip,json=managementIp,proto3" json:"management_ip,omitempty"`
	EthernetMac     string                 `protobuf:"bytes,8,opt,name=ethernet_mac,json=ethernetMac,proto3" json:"ethernet_mac,omitempty"`
	Location        string                 `protobuf:"bytes,9,opt,name=location,proto3" json:"location,omitempty"`
	Status          string                 `protobuf:"bytes,10,opt,name=status,proto3" json:"status,omitempty"`
	LastSync        string                 `protobuf:"bytes,11,opt,name=last_sync,json=lastSync,proto3" json:"last_sync,omitempty"`
	SyncStatus      string                 `protobuf:"bytes,12,opt,name=sync_status,json=syncStatus,proto3" json:"sync_status,omitempty"`
	ScannerId       int64                  `protobuf:"varint,13,opt,name=scanner_id,json=scannerId,proto3" json:"scanner_id,omitempty"`
	Username        string                 `protobuf:"bytes,14,opt,name=username,proto3" json:"username,omitempty"`
	Password        string                 `protobuf:"bytes,15,opt,name=password,proto3" json:"password,omitempty"`
	Port            int32                  `protobuf:"varint,16,opt,name=port,proto3" json:"port,omitempty"`
	Brand           string                 `protobuf:"bytes,17,opt,name=brand,proto3" json:"brand,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *SwitchDetails) Reset() {
	*x = SwitchDetails{}
	mi := &file_switch_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SwitchDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwitchDetails) ProtoMessage() {}

func (x *SwitchDetails) ProtoReflect() protoreflect.Message {
	mi := &file_switch_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwitchDetails.ProtoReflect.Descriptor instead.
func (*SwitchDetails) Descriptor() ([]byte, []int) {
	return file_switch_proto_rawDescGZIP(), []int{1}
}

func (x *SwitchDetails) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SwitchDetails) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

func (x *SwitchDetails) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *SwitchDetails) GetSoftwareVersion() string {
	if x != nil {
		return x.SoftwareVersion
	}
	return ""
}

func (x *SwitchDetails) GetSerialNumber() string {
	if x != nil {
		return x.SerialNumber
	}
	return ""
}

func (x *SwitchDetails) GetSystemUptime() string {
	if x != nil {
		return x.SystemUptime
	}
	return ""
}

func (x *SwitchDetails) GetManagementIp() string {
	if x != nil {
		return x.ManagementIp
	}
	return ""
}

func (x *SwitchDetails) GetEthernetMac() string {
	if x != nil {
		return x.EthernetMac
	}
	return ""
}

func (x *SwitchDetails) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *SwitchDetails) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *SwitchDetails) GetLastSync() string {
	if x != nil {
		return x.LastSync
	}
	return ""
}

func (x *SwitchDetails) GetSyncStatus() string {
	if x != nil {
		return x.SyncStatus
	}
	return ""
}

func (x *SwitchDetails) GetScannerId() int64 {
	if x != nil {
		return x.ScannerId
	}
	return 0
}

func (x *SwitchDetails) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SwitchDetails) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *SwitchDetails) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *SwitchDetails) GetBrand() string {
	if x != nil {
		return x.Brand
	}
	return ""
}

type SwitchInterface struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	InterfaceName string                 `protobuf:"bytes,2,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	IpAddress     string                 `protobuf:"bytes,4,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	SubnetMask    string                 `protobuf:"bytes,5,opt,name=subnet_mask,json=subnetMask,proto3" json:"subnet_mask,omitempty"`
	Status        string                 `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	Protocol      string                 `protobuf:"bytes,7,opt,name=protocol,proto3" json:"protocol,omitempty"`
	MacAddress    string                 `protobuf:"bytes,8,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	Vlans         []string               `protobuf:"bytes,9,rep,name=vlans,proto3" json:"vlans,omitempty"`
	Type          string                 `protobuf:"bytes,10,opt,name=type,proto3" json:"type,omitempty"`
	Speed         string                 `protobuf:"bytes,11,opt,name=speed,proto3" json:"speed,omitempty"`
	Duplex        string                 `protobuf:"bytes,12,opt,name=duplex,proto3" json:"duplex,omitempty"`
	Mtu           int32                  `protobuf:"varint,13,opt,name=mtu,proto3" json:"mtu,omitempty"`
	Mode          string                 `protobuf:"bytes,14,opt,name=mode,proto3" json:"mode,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SwitchInterface) Reset() {
	*x = SwitchInterface{}
	mi := &file_switch_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SwitchInterface) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwitchInterface) ProtoMessage() {}

func (x *SwitchInterface) ProtoReflect() protoreflect.Message {
	mi := &file_switch_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwitchInterface.ProtoReflect.Descriptor instead.
func (*SwitchInterface) Descriptor() ([]byte, []int) {
	return file_switch_proto_rawDescGZIP(), []int{2}
}

func (x *SwitchInterface) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SwitchInterface) GetInterfaceName() string {
	if x != nil {
		return x.InterfaceName
	}
	return ""
}

func (x *SwitchInterface) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SwitchInterface) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *SwitchInterface) GetSubnetMask() string {
	if x != nil {
		return x.SubnetMask
	}
	return ""
}

func (x *SwitchInterface) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *SwitchInterface) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *SwitchInterface) GetMacAddress() string {
	if x != nil {
		return x.MacAddress
	}
	return ""
}

func (x *SwitchInterface) GetVlans() []string {
	if x != nil {
		return x.Vlans
	}
	return nil
}

func (x *SwitchInterface) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SwitchInterface) GetSpeed() string {
	if x != nil {
		return x.Speed
	}
	return ""
}

func (x *SwitchInterface) GetDuplex() string {
	if x != nil {
		return x.Duplex
	}
	return ""
}

func (x *SwitchInterface) GetMtu() int32 {
	if x != nil {
		return x.Mtu
	}
	return 0
}

func (x *SwitchInterface) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

type SwitchVLAN struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	VlanId        int32                  `protobuf:"varint,2,opt,name=vlan_id,json=vlanId,proto3" json:"vlan_id,omitempty"`
	VlanName      string                 `protobuf:"bytes,3,opt,name=vlan_name,json=vlanName,proto3" json:"vlan_name,omitempty"`
	Description   string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Status        string                 `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	Ports         []string               `protobuf:"bytes,6,rep,name=ports,proto3" json:"ports,omitempty"`
	Type          string                 `protobuf:"bytes,7,opt,name=type,proto3" json:"type,omitempty"`
	Parent        int32                  `protobuf:"varint,8,opt,name=parent,proto3" json:"parent,omitempty"`
	Gateway       string                 `protobuf:"bytes,9,opt,name=gateway,proto3" json:"gateway,omitempty"`
	Subnet        string                 `protobuf:"bytes,10,opt,name=subnet,proto3" json:"subnet,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SwitchVLAN) Reset() {
	*x = SwitchVLAN{}
	mi := &file_switch_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SwitchVLAN) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwitchVLAN) ProtoMessage() {}

func (x *SwitchVLAN) ProtoReflect() protoreflect.Message {
	mi := &file_switch_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwitchVLAN.ProtoReflect.Descriptor instead.
func (*SwitchVLAN) Descriptor() ([]byte, []int) {
	return file_switch_proto_rawDescGZIP(), []int{3}
}

func (x *SwitchVLAN) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SwitchVLAN) GetVlanId() int32 {
	if x != nil {
		return x.VlanId
	}
	return 0
}

func (x *SwitchVLAN) GetVlanName() string {
	if x != nil {
		return x.VlanName
	}
	return ""
}

func (x *SwitchVLAN) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SwitchVLAN) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *SwitchVLAN) GetPorts() []string {
	if x != nil {
		return x.Ports
	}
	return nil
}

func (x *SwitchVLAN) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SwitchVLAN) GetParent() int32 {
	if x != nil {
		return x.Parent
	}
	return 0
}

func (x *SwitchVLAN) GetGateway() string {
	if x != nil {
		return x.Gateway
	}
	return ""
}

func (x *SwitchVLAN) GetSubnet() string {
	if x != nil {
		return x.Subnet
	}
	return ""
}

type SwitchNeighbor struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	DeviceId      string                 `protobuf:"bytes,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	LocalPort     string                 `protobuf:"bytes,3,opt,name=local_port,json=localPort,proto3" json:"local_port,omitempty"`
	RemotePort    string                 `protobuf:"bytes,4,opt,name=remote_port,json=remotePort,proto3" json:"remote_port,omitempty"`
	Platform      string                 `protobuf:"bytes,5,opt,name=platform,proto3" json:"platform,omitempty"`
	IpAddress     string                 `protobuf:"bytes,6,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	Capabilities  []string               `protobuf:"bytes,7,rep,name=capabilities,proto3" json:"capabilities,omitempty"`
	Software      string                 `protobuf:"bytes,8,opt,name=software,proto3" json:"software,omitempty"`
	Duplex        string                 `protobuf:"bytes,9,opt,name=duplex,proto3" json:"duplex,omitempty"`
	Protocol      string                 `protobuf:"bytes,10,opt,name=protocol,proto3" json:"protocol,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SwitchNeighbor) Reset() {
	*x = SwitchNeighbor{}
	mi := &file_switch_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SwitchNeighbor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwitchNeighbor) ProtoMessage() {}

func (x *SwitchNeighbor) ProtoReflect() protoreflect.Message {
	mi := &file_switch_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwitchNeighbor.ProtoReflect.Descriptor instead.
func (*SwitchNeighbor) Descriptor() ([]byte, []int) {
	return file_switch_proto_rawDescGZIP(), []int{4}
}

func (x *SwitchNeighbor) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SwitchNeighbor) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *SwitchNeighbor) GetLocalPort() string {
	if x != nil {
		return x.LocalPort
	}
	return ""
}

func (x *SwitchNeighbor) GetRemotePort() string {
	if x != nil {
		return x.RemotePort
	}
	return ""
}

func (x *SwitchNeighbor) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *SwitchNeighbor) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *SwitchNeighbor) GetCapabilities() []string {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

func (x *SwitchNeighbor) GetSoftware() string {
	if x != nil {
		return x.Software
	}
	return ""
}

func (x *SwitchNeighbor) GetDuplex() string {
	if x != nil {
		return x.Duplex
	}
	return ""
}

func (x *SwitchNeighbor) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

type SwitchRoutingEntry struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Id              string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Network         string                 `protobuf:"bytes,2,opt,name=network,proto3" json:"network,omitempty"`
	Mask            string                 `protobuf:"bytes,3,opt,name=mask,proto3" json:"mask,omitempty"`
	NextHop         string                 `protobuf:"bytes,4,opt,name=next_hop,json=nextHop,proto3" json:"next_hop,omitempty"`
	Interface       string                 `protobuf:"bytes,5,opt,name=interface,proto3" json:"interface,omitempty"`
	Metric          int32                  `protobuf:"varint,6,opt,name=metric,proto3" json:"metric,omitempty"`
	AdminDistance   int32                  `protobuf:"varint,7,opt,name=admin_distance,json=adminDistance,proto3" json:"admin_distance,omitempty"`
	Protocol        string                 `protobuf:"bytes,8,opt,name=protocol,proto3" json:"protocol,omitempty"`
	Age             string                 `protobuf:"bytes,9,opt,name=age,proto3" json:"age,omitempty"`
	Tag             string                 `protobuf:"bytes,10,opt,name=tag,proto3" json:"tag,omitempty"`
	Vrf             string                 `protobuf:"bytes,11,opt,name=vrf,proto3" json:"vrf,omitempty"`
	RoutePreference int32                  `protobuf:"varint,12,opt,name=route_preference,json=routePreference,proto3" json:"route_preference,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *SwitchRoutingEntry) Reset() {
	*x = SwitchRoutingEntry{}
	mi := &file_switch_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SwitchRoutingEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwitchRoutingEntry) ProtoMessage() {}

func (x *SwitchRoutingEntry) ProtoReflect() protoreflect.Message {
	mi := &file_switch_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwitchRoutingEntry.ProtoReflect.Descriptor instead.
func (*SwitchRoutingEntry) Descriptor() ([]byte, []int) {
	return file_switch_proto_rawDescGZIP(), []int{5}
}

func (x *SwitchRoutingEntry) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SwitchRoutingEntry) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *SwitchRoutingEntry) GetMask() string {
	if x != nil {
		return x.Mask
	}
	return ""
}

func (x *SwitchRoutingEntry) GetNextHop() string {
	if x != nil {
		return x.NextHop
	}
	return ""
}

func (x *SwitchRoutingEntry) GetInterface() string {
	if x != nil {
		return x.Interface
	}
	return ""
}

func (x *SwitchRoutingEntry) GetMetric() int32 {
	if x != nil {
		return x.Metric
	}
	return 0
}

func (x *SwitchRoutingEntry) GetAdminDistance() int32 {
	if x != nil {
		return x.AdminDistance
	}
	return 0
}

func (x *SwitchRoutingEntry) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *SwitchRoutingEntry) GetAge() string {
	if x != nil {
		return x.Age
	}
	return ""
}

func (x *SwitchRoutingEntry) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *SwitchRoutingEntry) GetVrf() string {
	if x != nil {
		return x.Vrf
	}
	return ""
}

func (x *SwitchRoutingEntry) GetRoutePreference() int32 {
	if x != nil {
		return x.RoutePreference
	}
	return 0
}

type Switch struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Asset         *SwitchAsset           `protobuf:"bytes,1,opt,name=asset,proto3" json:"asset,omitempty"`
	Details       *SwitchDetails         `protobuf:"bytes,2,opt,name=details,proto3" json:"details,omitempty"`
	Interfaces    []*SwitchInterface     `protobuf:"bytes,3,rep,name=interfaces,proto3" json:"interfaces,omitempty"`
	Vlans         []*SwitchVLAN          `protobuf:"bytes,4,rep,name=vlans,proto3" json:"vlans,omitempty"`
	Neighbors     []*SwitchNeighbor      `protobuf:"bytes,5,rep,name=neighbors,proto3" json:"neighbors,omitempty"`
	RoutingTable  []*SwitchRoutingEntry  `protobuf:"bytes,6,rep,name=routing_table,json=routingTable,proto3" json:"routing_table,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Switch) Reset() {
	*x = Switch{}
	mi := &file_switch_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Switch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Switch) ProtoMessage() {}

func (x *Switch) ProtoReflect() protoreflect.Message {
	mi := &file_switch_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Switch.ProtoReflect.Descriptor instead.
func (*Switch) Descriptor() ([]byte, []int) {
	return file_switch_proto_rawDescGZIP(), []int{6}
}

func (x *Switch) GetAsset() *SwitchAsset {
	if x != nil {
		return x.Asset
	}
	return nil
}

func (x *Switch) GetDetails() *SwitchDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *Switch) GetInterfaces() []*SwitchInterface {
	if x != nil {
		return x.Interfaces
	}
	return nil
}

func (x *Switch) GetVlans() []*SwitchVLAN {
	if x != nil {
		return x.Vlans
	}
	return nil
}

func (x *Switch) GetNeighbors() []*SwitchNeighbor {
	if x != nil {
		return x.Neighbors
	}
	return nil
}

func (x *Switch) GetRoutingTable() []*SwitchRoutingEntry {
	if x != nil {
		return x.RoutingTable
	}
	return nil
}

type CreateSwitchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Asset         *SwitchAsset           `protobuf:"bytes,1,opt,name=asset,proto3" json:"asset,omitempty"`
	Details       *SwitchDetails         `protobuf:"bytes,2,opt,name=details,proto3" json:"details,omitempty"`
	Interfaces    []*SwitchInterface     `protobuf:"bytes,3,rep,name=interfaces,proto3" json:"interfaces,omitempty"`
	Vlans         []*SwitchVLAN          `protobuf:"bytes,4,rep,name=vlans,proto3" json:"vlans,omitempty"`
	Neighbors     []*SwitchNeighbor      `protobuf:"bytes,5,rep,name=neighbors,proto3" json:"neighbors,omitempty"`
	RoutingTable  []*SwitchRoutingEntry  `protobuf:"bytes,6,rep,name=routing_table,json=routingTable,proto3" json:"routing_table,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSwitchRequest) Reset() {
	*x = CreateSwitchRequest{}
	mi := &file_switch_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSwitchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSwitchRequest) ProtoMessage() {}

func (x *CreateSwitchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_switch_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSwitchRequest.ProtoReflect.Descriptor instead.
func (*CreateSwitchRequest) Descriptor() ([]byte, []int) {
	return file_switch_proto_rawDescGZIP(), []int{7}
}

func (x *CreateSwitchRequest) GetAsset() *SwitchAsset {
	if x != nil {
		return x.Asset
	}
	return nil
}

func (x *CreateSwitchRequest) GetDetails() *SwitchDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *CreateSwitchRequest) GetInterfaces() []*SwitchInterface {
	if x != nil {
		return x.Interfaces
	}
	return nil
}

func (x *CreateSwitchRequest) GetVlans() []*SwitchVLAN {
	if x != nil {
		return x.Vlans
	}
	return nil
}

func (x *CreateSwitchRequest) GetNeighbors() []*SwitchNeighbor {
	if x != nil {
		return x.Neighbors
	}
	return nil
}

func (x *CreateSwitchRequest) GetRoutingTable() []*SwitchRoutingEntry {
	if x != nil {
		return x.RoutingTable
	}
	return nil
}

type CreateSwitchResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSwitchResponse) Reset() {
	*x = CreateSwitchResponse{}
	mi := &file_switch_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSwitchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSwitchResponse) ProtoMessage() {}

func (x *CreateSwitchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_switch_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSwitchResponse.ProtoReflect.Descriptor instead.
func (*CreateSwitchResponse) Descriptor() ([]byte, []int) {
	return file_switch_proto_rawDescGZIP(), []int{8}
}

func (x *CreateSwitchResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateSwitchResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CreateSwitchResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type UpdateSwitchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Asset         *SwitchAsset           `protobuf:"bytes,2,opt,name=asset,proto3" json:"asset,omitempty"`
	Details       *SwitchDetails         `protobuf:"bytes,3,opt,name=details,proto3" json:"details,omitempty"`
	Interfaces    []*SwitchInterface     `protobuf:"bytes,4,rep,name=interfaces,proto3" json:"interfaces,omitempty"`
	Vlans         []*SwitchVLAN          `protobuf:"bytes,5,rep,name=vlans,proto3" json:"vlans,omitempty"`
	Neighbors     []*SwitchNeighbor      `protobuf:"bytes,6,rep,name=neighbors,proto3" json:"neighbors,omitempty"`
	RoutingTable  []*SwitchRoutingEntry  `protobuf:"bytes,7,rep,name=routing_table,json=routingTable,proto3" json:"routing_table,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSwitchRequest) Reset() {
	*x = UpdateSwitchRequest{}
	mi := &file_switch_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSwitchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSwitchRequest) ProtoMessage() {}

func (x *UpdateSwitchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_switch_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSwitchRequest.ProtoReflect.Descriptor instead.
func (*UpdateSwitchRequest) Descriptor() ([]byte, []int) {
	return file_switch_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateSwitchRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateSwitchRequest) GetAsset() *SwitchAsset {
	if x != nil {
		return x.Asset
	}
	return nil
}

func (x *UpdateSwitchRequest) GetDetails() *SwitchDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *UpdateSwitchRequest) GetInterfaces() []*SwitchInterface {
	if x != nil {
		return x.Interfaces
	}
	return nil
}

func (x *UpdateSwitchRequest) GetVlans() []*SwitchVLAN {
	if x != nil {
		return x.Vlans
	}
	return nil
}

func (x *UpdateSwitchRequest) GetNeighbors() []*SwitchNeighbor {
	if x != nil {
		return x.Neighbors
	}
	return nil
}

func (x *UpdateSwitchRequest) GetRoutingTable() []*SwitchRoutingEntry {
	if x != nil {
		return x.RoutingTable
	}
	return nil
}

type UpdateSwitchResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSwitchResponse) Reset() {
	*x = UpdateSwitchResponse{}
	mi := &file_switch_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSwitchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSwitchResponse) ProtoMessage() {}

func (x *UpdateSwitchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_switch_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSwitchResponse.ProtoReflect.Descriptor instead.
func (*UpdateSwitchResponse) Descriptor() ([]byte, []int) {
	return file_switch_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateSwitchResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UpdateSwitchResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DeleteSwitchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteSwitchRequest) Reset() {
	*x = DeleteSwitchRequest{}
	mi := &file_switch_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSwitchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSwitchRequest) ProtoMessage() {}

func (x *DeleteSwitchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_switch_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSwitchRequest.ProtoReflect.Descriptor instead.
func (*DeleteSwitchRequest) Descriptor() ([]byte, []int) {
	return file_switch_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteSwitchRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteSwitchResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteSwitchResponse) Reset() {
	*x = DeleteSwitchResponse{}
	mi := &file_switch_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSwitchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSwitchResponse) ProtoMessage() {}

func (x *DeleteSwitchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_switch_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSwitchResponse.ProtoReflect.Descriptor instead.
func (*DeleteSwitchResponse) Descriptor() ([]byte, []int) {
	return file_switch_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteSwitchResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DeleteSwitchResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DeleteSwitchesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ids           []string               `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	Exclude       bool                   `protobuf:"varint,2,opt,name=exclude,proto3" json:"exclude,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteSwitchesRequest) Reset() {
	*x = DeleteSwitchesRequest{}
	mi := &file_switch_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSwitchesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSwitchesRequest) ProtoMessage() {}

func (x *DeleteSwitchesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_switch_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSwitchesRequest.ProtoReflect.Descriptor instead.
func (*DeleteSwitchesRequest) Descriptor() ([]byte, []int) {
	return file_switch_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteSwitchesRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *DeleteSwitchesRequest) GetExclude() bool {
	if x != nil {
		return x.Exclude
	}
	return false
}

type DeleteSwitchesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteSwitchesResponse) Reset() {
	*x = DeleteSwitchesResponse{}
	mi := &file_switch_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSwitchesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSwitchesResponse) ProtoMessage() {}

func (x *DeleteSwitchesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_switch_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSwitchesResponse.ProtoReflect.Descriptor instead.
func (*DeleteSwitchesResponse) Descriptor() ([]byte, []int) {
	return file_switch_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteSwitchesResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DeleteSwitchesResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_switch_proto protoreflect.FileDescriptor

const file_switch_proto_rawDesc = "" +
	"\n" +
	"\fswitch.proto\"\x86\x03\n" +
	"\vSwitchAsset\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1f\n" +
	"\vvendor_code\x18\x02 \x01(\tR\n" +
	"vendorCode\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x16\n" +
	"\x06domain\x18\x04 \x01(\tR\x06domain\x12\x1a\n" +
	"\bhostname\x18\x05 \x01(\tR\bhostname\x12\x17\n" +
	"\aos_name\x18\x06 \x01(\tR\x06osName\x12\x1d\n" +
	"\n" +
	"os_version\x18\a \x01(\tR\tosVersion\x12 \n" +
	"\vdescription\x18\b \x01(\tR\vdescription\x12\x1d\n" +
	"\n" +
	"asset_type\x18\t \x01(\tR\tassetType\x12#\n" +
	"\rdiscovered_by\x18\n" +
	" \x01(\tR\fdiscoveredBy\x12\x12\n" +
	"\x04risk\x18\v \x01(\x05R\x04risk\x12+\n" +
	"\x11logging_completed\x18\f \x01(\bR\x10loggingCompleted\x12\x1f\n" +
	"\vasset_value\x18\r \x01(\x01R\n" +
	"assetValue\"\x80\x04\n" +
	"\rSwitchDetails\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x19\n" +
	"\basset_id\x18\x02 \x01(\tR\aassetId\x12\x14\n" +
	"\x05model\x18\x03 \x01(\tR\x05model\x12)\n" +
	"\x10software_version\x18\x04 \x01(\tR\x0fsoftwareVersion\x12#\n" +
	"\rserial_number\x18\x05 \x01(\tR\fserialNumber\x12#\n" +
	"\rsystem_uptime\x18\x06 \x01(\tR\fsystemUptime\x12#\n" +
	"\rmanagement_ip\x18\a \x01(\tR\fmanagementIp\x12!\n" +
	"\fethernet_mac\x18\b \x01(\tR\vethernetMac\x12\x1a\n" +
	"\blocation\x18\t \x01(\tR\blocation\x12\x16\n" +
	"\x06status\x18\n" +
	" \x01(\tR\x06status\x12\x1b\n" +
	"\tlast_sync\x18\v \x01(\tR\blastSync\x12\x1f\n" +
	"\vsync_status\x18\f \x01(\tR\n" +
	"syncStatus\x12\x1d\n" +
	"\n" +
	"scanner_id\x18\r \x01(\x03R\tscannerId\x12\x1a\n" +
	"\busername\x18\x0e \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x0f \x01(\tR\bpassword\x12\x12\n" +
	"\x04port\x18\x10 \x01(\x05R\x04port\x12\x14\n" +
	"\x05brand\x18\x11 \x01(\tR\x05brand\"\xfd\x02\n" +
	"\x0fSwitchInterface\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12%\n" +
	"\x0einterface_name\x18\x02 \x01(\tR\rinterfaceName\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x1d\n" +
	"\n" +
	"ip_address\x18\x04 \x01(\tR\tipAddress\x12\x1f\n" +
	"\vsubnet_mask\x18\x05 \x01(\tR\n" +
	"subnetMask\x12\x16\n" +
	"\x06status\x18\x06 \x01(\tR\x06status\x12\x1a\n" +
	"\bprotocol\x18\a \x01(\tR\bprotocol\x12\x1f\n" +
	"\vmac_address\x18\b \x01(\tR\n" +
	"macAddress\x12\x14\n" +
	"\x05vlans\x18\t \x03(\tR\x05vlans\x12\x12\n" +
	"\x04type\x18\n" +
	" \x01(\tR\x04type\x12\x14\n" +
	"\x05speed\x18\v \x01(\tR\x05speed\x12\x16\n" +
	"\x06duplex\x18\f \x01(\tR\x06duplex\x12\x10\n" +
	"\x03mtu\x18\r \x01(\x05R\x03mtu\x12\x12\n" +
	"\x04mode\x18\x0e \x01(\tR\x04mode\"\x80\x02\n" +
	"\n" +
	"SwitchVLAN\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\avlan_id\x18\x02 \x01(\x05R\x06vlanId\x12\x1b\n" +
	"\tvlan_name\x18\x03 \x01(\tR\bvlanName\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12\x16\n" +
	"\x06status\x18\x05 \x01(\tR\x06status\x12\x14\n" +
	"\x05ports\x18\x06 \x03(\tR\x05ports\x12\x12\n" +
	"\x04type\x18\a \x01(\tR\x04type\x12\x16\n" +
	"\x06parent\x18\b \x01(\x05R\x06parent\x12\x18\n" +
	"\agateway\x18\t \x01(\tR\agateway\x12\x16\n" +
	"\x06subnet\x18\n" +
	" \x01(\tR\x06subnet\"\xac\x02\n" +
	"\x0eSwitchNeighbor\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1b\n" +
	"\tdevice_id\x18\x02 \x01(\tR\bdeviceId\x12\x1d\n" +
	"\n" +
	"local_port\x18\x03 \x01(\tR\tlocalPort\x12\x1f\n" +
	"\vremote_port\x18\x04 \x01(\tR\n" +
	"remotePort\x12\x1a\n" +
	"\bplatform\x18\x05 \x01(\tR\bplatform\x12\x1d\n" +
	"\n" +
	"ip_address\x18\x06 \x01(\tR\tipAddress\x12\"\n" +
	"\fcapabilities\x18\a \x03(\tR\fcapabilities\x12\x1a\n" +
	"\bsoftware\x18\b \x01(\tR\bsoftware\x12\x16\n" +
	"\x06duplex\x18\t \x01(\tR\x06duplex\x12\x1a\n" +
	"\bprotocol\x18\n" +
	" \x01(\tR\bprotocol\"\xc7\x02\n" +
	"\x12SwitchRoutingEntry\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x18\n" +
	"\anetwork\x18\x02 \x01(\tR\anetwork\x12\x12\n" +
	"\x04mask\x18\x03 \x01(\tR\x04mask\x12\x19\n" +
	"\bnext_hop\x18\x04 \x01(\tR\anextHop\x12\x1c\n" +
	"\tinterface\x18\x05 \x01(\tR\tinterface\x12\x16\n" +
	"\x06metric\x18\x06 \x01(\x05R\x06metric\x12%\n" +
	"\x0eadmin_distance\x18\a \x01(\x05R\radminDistance\x12\x1a\n" +
	"\bprotocol\x18\b \x01(\tR\bprotocol\x12\x10\n" +
	"\x03age\x18\t \x01(\tR\x03age\x12\x10\n" +
	"\x03tag\x18\n" +
	" \x01(\tR\x03tag\x12\x10\n" +
	"\x03vrf\x18\v \x01(\tR\x03vrf\x12)\n" +
	"\x10route_preference\x18\f \x01(\x05R\x0froutePreference\"\x94\x02\n" +
	"\x06Switch\x12\"\n" +
	"\x05asset\x18\x01 \x01(\v2\f.SwitchAssetR\x05asset\x12(\n" +
	"\adetails\x18\x02 \x01(\v2\x0e.SwitchDetailsR\adetails\x120\n" +
	"\n" +
	"interfaces\x18\x03 \x03(\v2\x10.SwitchInterfaceR\n" +
	"interfaces\x12!\n" +
	"\x05vlans\x18\x04 \x03(\v2\v.SwitchVLANR\x05vlans\x12-\n" +
	"\tneighbors\x18\x05 \x03(\v2\x0f.SwitchNeighborR\tneighbors\x128\n" +
	"\rrouting_table\x18\x06 \x03(\v2\x13.SwitchRoutingEntryR\froutingTable\"\xa1\x02\n" +
	"\x13CreateSwitchRequest\x12\"\n" +
	"\x05asset\x18\x01 \x01(\v2\f.SwitchAssetR\x05asset\x12(\n" +
	"\adetails\x18\x02 \x01(\v2\x0e.SwitchDetailsR\adetails\x120\n" +
	"\n" +
	"interfaces\x18\x03 \x03(\v2\x10.SwitchInterfaceR\n" +
	"interfaces\x12!\n" +
	"\x05vlans\x18\x04 \x03(\v2\v.SwitchVLANR\x05vlans\x12-\n" +
	"\tneighbors\x18\x05 \x03(\v2\x0f.SwitchNeighborR\tneighbors\x128\n" +
	"\rrouting_table\x18\x06 \x03(\v2\x13.SwitchRoutingEntryR\froutingTable\"Z\n" +
	"\x14CreateSwitchResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\"\xb1\x02\n" +
	"\x13UpdateSwitchRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\"\n" +
	"\x05asset\x18\x02 \x01(\v2\f.SwitchAssetR\x05asset\x12(\n" +
	"\adetails\x18\x03 \x01(\v2\x0e.SwitchDetailsR\adetails\x120\n" +
	"\n" +
	"interfaces\x18\x04 \x03(\v2\x10.SwitchInterfaceR\n" +
	"interfaces\x12!\n" +
	"\x05vlans\x18\x05 \x03(\v2\v.SwitchVLANR\x05vlans\x12-\n" +
	"\tneighbors\x18\x06 \x03(\v2\x0f.SwitchNeighborR\tneighbors\x128\n" +
	"\rrouting_table\x18\a \x03(\v2\x13.SwitchRoutingEntryR\froutingTable\"J\n" +
	"\x14UpdateSwitchResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"%\n" +
	"\x13DeleteSwitchRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"J\n" +
	"\x14DeleteSwitchResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"C\n" +
	"\x15DeleteSwitchesRequest\x12\x10\n" +
	"\x03ids\x18\x01 \x03(\tR\x03ids\x12\x18\n" +
	"\aexclude\x18\x02 \x01(\bR\aexclude\"L\n" +
	"\x16DeleteSwitchesResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessageB:Z8gitlab.apk-group.net/siem/backend/asset-discovery/api/pbb\x06proto3"

var (
	file_switch_proto_rawDescOnce sync.Once
	file_switch_proto_rawDescData []byte
)

func file_switch_proto_rawDescGZIP() []byte {
	file_switch_proto_rawDescOnce.Do(func() {
		file_switch_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_switch_proto_rawDesc), len(file_switch_proto_rawDesc)))
	})
	return file_switch_proto_rawDescData
}

var file_switch_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_switch_proto_goTypes = []any{
	(*SwitchAsset)(nil),            // 0: SwitchAsset
	(*SwitchDetails)(nil),          // 1: SwitchDetails
	(*SwitchInterface)(nil),        // 2: SwitchInterface
	(*SwitchVLAN)(nil),             // 3: SwitchVLAN
	(*SwitchNeighbor)(nil),         // 4: SwitchNeighbor
	(*SwitchRoutingEntry)(nil),     // 5: SwitchRoutingEntry
	(*Switch)(nil),                 // 6: Switch
	(*CreateSwitchRequest)(nil),    // 7: CreateSwitchRequest
	(*CreateSwitchResponse)(nil),   // 8: CreateSwitchResponse
	(*UpdateSwitchRequest)(nil),    // 9: UpdateSwitchRequest
	(*UpdateSwitchResponse)(nil),   // 10: UpdateSwitchResponse
	(*DeleteSwitchRequest)(nil),    // 11: DeleteSwitchRequest
	(*DeleteSwitchResponse)(nil),   // 12: DeleteSwitchResponse
	(*DeleteSwitchesRequest)(nil),  // 13: DeleteSwitchesRequest
	(*DeleteSwitchesResponse)(nil), // 14: DeleteSwitchesResponse
}
var file_switch_proto_depIdxs = []int32{
	0,  // 0: Switch.asset:type_name -> SwitchAsset
	1,  // 1: Switch.details:type_name -> SwitchDetails
	2,  // 2: Switch.interfaces:type_name -> SwitchInterface
	3,  // 3: Switch.vlans:type_name -> SwitchVLAN
	4,  // 4: Switch.neighbors:type_name -> SwitchNeighbor
	5,  // 5: Switch.routing_table:type_name -> SwitchRoutingEntry
	0,  // 6: CreateSwitchRequest.asset:type_name -> SwitchAsset
	1,  // 7: CreateSwitchRequest.details:type_name -> SwitchDetails
	2,  // 8: CreateSwitchRequest.interfaces:type_name -> SwitchInterface
	3,  // 9: CreateSwitchRequest.vlans:type_name -> SwitchVLAN
	4,  // 10: CreateSwitchRequest.neighbors:type_name -> SwitchNeighbor
	5,  // 11: CreateSwitchRequest.routing_table:type_name -> SwitchRoutingEntry
	0,  // 12: UpdateSwitchRequest.asset:type_name -> SwitchAsset
	1,  // 13: UpdateSwitchRequest.details:type_name -> SwitchDetails
	2,  // 14: UpdateSwitchRequest.interfaces:type_name -> SwitchInterface
	3,  // 15: UpdateSwitchRequest.vlans:type_name -> SwitchVLAN
	4,  // 16: UpdateSwitchRequest.neighbors:type_name -> SwitchNeighbor
	5,  // 17: UpdateSwitchRequest.routing_table:type_name -> SwitchRoutingEntry
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_switch_proto_init() }
func file_switch_proto_init() {
	if File_switch_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_switch_proto_rawDesc), len(file_switch_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_switch_proto_goTypes,
		DependencyIndexes: file_switch_proto_depIdxs,
		MessageInfos:      file_switch_proto_msgTypes,
	}.Build()
	File_switch_proto = out.File
	file_switch_proto_goTypes = nil
	file_switch_proto_depIdxs = nil
}
