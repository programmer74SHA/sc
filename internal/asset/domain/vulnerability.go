package domain

import (
	"time"

	"github.com/google/uuid"
)

// VulnerabilityUUID represents a vulnerability UUID
type VulnerabilityUUID = uuid.UUID

// Vulnerability represents a security vulnerability
type Vulnerability struct {
	ID                     VulnerabilityUUID `json:"id"`
	PluginID               int               `json:"plugin_id"`
	PluginName             string            `json:"plugin_name"`
	PluginFamily           string            `json:"plugin_family"`
	Severity               string            `json:"severity"`
	SeverityIndex          int               `json:"severity_index"`
	CVSSBaseScore          *float64          `json:"cvss_base_score"`
	CVSSVector             string            `json:"cvss_vector"`
	CVSS3BaseScore         *float64          `json:"cvss3_base_score"`
	CVSS3Vector            string            `json:"cvss3_vector"`
	VPRScore               *float64          `json:"vpr_score"`
	CPE                    string            `json:"cpe"`
	Description            string            `json:"description"`
	Solution               string            `json:"solution"`
	Synopsis               string            `json:"synopsis"`
	SeeAlso                string            `json:"see_also"`
	PluginPublicationDate  *time.Time        `json:"plugin_publication_date"`
	PluginModificationDate *time.Time        `json:"plugin_modification_date"`
	PluginType             string            `json:"plugin_type"`
	CVE                    string            `json:"cve"`
	BID                    string            `json:"bid"`
	XRef                   string            `json:"xref"`
	RiskFactor             string            `json:"risk_factor"`
	CreatedAt              time.Time         `json:"created_at"`
	UpdatedAt              time.Time         `json:"updated_at"`
}

// AssetVulnerability represents the relationship between an asset and a vulnerability
type AssetVulnerability struct {
	ID                  uuid.UUID         `json:"id"`
	AssetID             uuid.UUID         `json:"asset_id"`
	VulnerabilityID     VulnerabilityUUID `json:"vulnerability_id"`
	PortID              *string           `json:"port_id"`
	Port                *int              `json:"port"`
	Protocol            string            `json:"protocol"`
	PluginOutput        string            `json:"plugin_output"`
	FirstDetected       time.Time         `json:"first_detected"`
	LastDetected        time.Time         `json:"last_detected"`
	Status              string            `json:"status"`
	ScanID              *int              `json:"scan_id"`
	HostIDNessus        *int              `json:"host_id_nessus"`
	VulnIndexNessus     *int              `json:"vuln_index_nessus"`
	SeverityIndexNessus *int              `json:"severity_index_nessus"`
	CountNessus         *int              `json:"count_nessus"`
	CreatedAt           time.Time         `json:"created_at"`
	UpdatedAt           time.Time         `json:"updated_at"`
}

// NessusScan represents a Nessus scan
type NessusScan struct {
	ID            int        `json:"id"`
	UUID          string     `json:"uuid"`
	Name          string     `json:"name"`
	Status        string     `json:"status"`
	ScannerName   string     `json:"scanner_name"`
	Targets       string     `json:"targets"`
	ScanStartTime *time.Time `json:"scan_start_time"`
	ScanEndTime   *time.Time `json:"scan_end_time"`
	FolderID      *int       `json:"folder_id"`
	CreatedAt     time.Time  `json:"created_at"`
	UpdatedAt     time.Time  `json:"updated_at"`
}

// VulnerabilityFilter represents filters for vulnerability queries
type VulnerabilityFilter struct {
	AssetID        *uuid.UUID `json:"asset_id"`
	PluginID       *int       `json:"plugin_id"`
	Severity       string     `json:"severity"`
	Status         string     `json:"status"`
	Port           *int       `json:"port"`
	Protocol       string     `json:"protocol"`
	PluginFamily   string     `json:"plugin_family"`
	MinCVSSScore   *float64   `json:"min_cvss_score"`
	MaxCVSSScore   *float64   `json:"max_cvss_score"`
	CreatedAfter   *time.Time `json:"created_after"`
	CreatedBefore  *time.Time `json:"created_before"`
	DetectedAfter  *time.Time `json:"detected_after"`
	DetectedBefore *time.Time `json:"detected_before"`
}

// VulnerabilityUUIDFromString converts string to VulnerabilityUUID
func VulnerabilityUUIDFromString(s string) (VulnerabilityUUID, error) {
	return uuid.Parse(s)
}

// Pagination for vulnerability queries
type VulnerabilityPagination struct {
	Page      int
	Limit     int
	SortField string
	SortOrder string
}

// NessusMetadata represents Nessus scanner specific metadata
type NessusMetadata struct {
	ID        int64  `json:"id"`
	ScannerID int64  `json:"scanner_id"`
	URL       string `json:"url"`
	Username  string `json:"username"`
	Password  string `json:"password"`
	APIKey    string `json:"api_key"`
}
